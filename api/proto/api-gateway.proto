syntax = "proto3";

package api_gateway;

service APIGateWay {
  rpc AddServiceEndpoint(ServiceEndPoint) returns (AddedServiceEndPoint) {}
  rpc DisableServiceEndpoint(DisableServiceEndPointRequest) returns (DisabledServiceEndPointResponse) {}
  rpc GetActiveServiceEndpoints(ServiceEndPointsRequest) returns (ServiceEndPointList) {}

  rpc SetLifeGuardCoordinator(SetLifeGuardCoordinatorRequest) returns (SetLifeGuardCoordinatorResponse) {}
  rpc GetLifeGuardCoordinator(GetLifeGuardCoordinatorRequest) returns (GetLifeGuardCoordinatorResponse) {}
  rpc GetCurrentLoadBalancer(GetCurrentLoadBalancerRequest) returns (GetCurrentLoadBalancerResponse) {}

  rpc AddLifeGuardNode(AddLifeGuardNodeRequest) returns (AddLifeGuardNodeResponse) {}
  rpc RemoveLifeGuardNode(RemoveLifeGuardNodeRequest) returns (RemoveLifeGuardNodeResponse) {}
  rpc GetNextLifeGuard(GetNextLifeGuardRequest) returns (GetNextLifeGuardResponse) {}
  rpc GetMaxLifeGuards(GetMaxLifeGuardsRequest) returns (GetMaxLifeGuardsResponse) {}
}

message GetCurrentLoadBalancerRequest {}

message GetCurrentLoadBalancerResponse {
  string ip = 1;
  int32 port = 2;
}

message GetMaxLifeGuardsRequest {}

message GetMaxLifeGuardsResponse {
  int32 maxLifeGuards = 1;
  bool isCurrentlyMaxNumber = 2;
}

message AddLifeGuardNodeRequest {
  string ip = 1;
  int32 port = 2;
}

message AddLifeGuardNodeResponse {
  int32 newLifeGuardId = 1;
}

message RemoveLifeGuardNodeRequest {
  string ip = 1;
  int32 port = 2;
}

message RemoveLifeGuardNodeResponse {}

message SetLifeGuardCoordinatorRequest {
  int32 lifeGuardId = 1;
  int32 loadBalancerPort = 2;
}

message SetLifeGuardCoordinatorResponse {}

message GetLifeGuardCoordinatorRequest {}

message GetLifeGuardCoordinatorResponse {
  string ip = 1;
  int32 port = 2;
}

message GetNextLifeGuardRequest {
  int32 lifeGuardId = 1;
}

message GetNextLifeGuardResponse {
  string ip = 1;
  int32 port = 2;
}

message ServiceEndPoint {
  string ip = 1;
  int32 port = 2;
}
message ServiceEndPointsRequest {}
message ServiceEndPointList {
  repeated ServiceEndPoint endPoint = 1;
}
message AddedServiceEndPoint{}
message DisabledServiceEndPointResponse{}
message DisableServiceEndPointRequest {
  string ip = 1;
  int32 port = 2;
}

message UploadTokenRequest{}

message UploadTokenResponse{
  string Token = 1;
}
message ConversionRequest{
  string Token = 1;
  string InputType = 2;
  string OutputType = 3;
}

message ConversionResponse{
  string Token = 1;
}

message Chunk {
  oneof RequestType {
    string Token = 1;
    bytes Content = 2;
  }
}

enum UploadStatusCode {
  Unknown = 0;
  Ok = 1;
  Interrupted = 2;
}

enum ConversionStatusCode {
  InProgress = 0;
  Done = 1;
  Failed = 2;
  NotStarted = 3;
}

message ConversionStatusResponse {
  ConversionStatusCode Code = 1;
  string DownloadId = 2;
}
message ConversionStatusRequest {
  string StatusId = 1;
}

message UploadStatus {
  string RetrievalToken = 1;
}

message DownloadRequest {
  string Id = 1;
}

message DeleteRequest{
  string Id = 1;
}

message DeleteResponse{
  UploadStatusCode code = 1;
}

message DownloadStatus {
  string Message = 1;
  UploadStatusCode Code = 2;
}
